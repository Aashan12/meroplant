import React, { useState } from 'react';
import { View, Text, ScrollView, StyleSheet, Image, Dimensions, TouchableOpacity, SafeAreaView } from 'react-native';
import { useRouter } from 'expo-router';
import { MaterialIcons } from '@expo/vector-icons'; // For icons

const { width } = Dimensions.get('window');

const PepperBell = () => {
  const [language, setLanguage] = useState('english');
  const [expandedSection, setExpandedSection] = useState(null); // To handle expandable sections
  const router = useRouter();

  // Image imports
  const healthyImages = [
    require('../../../assets/images/pepper/pepper_healthy1.jpg'),
    require('../../../assets/images/pepper/pepper_healthy2.jpg'),
  ];

  const bacterialSpotImages = [
    require('../../../assets/images/pepper/Pepper_bacterial_spot1.jpg'),
    require('../../../assets/images/pepper/Pepper_bacterial_spot2.jpg'),
  ];

  // Toggle expandable sections
  const toggleSection = (section) => {
    setExpandedSection(expandedSection === section ? null : section);
  };

  return (
    <SafeAreaView style={styles.mainContainer}>
      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity style={styles.backButton} onPress={() => router.back()}>
          <MaterialIcons name="arrow-back" size={24} color="white" />
        </TouchableOpacity>
        <View style={styles.languageToggle}>
          <TouchableOpacity 
            style={[styles.langButton, language === 'english' && styles.activeLang]}
            onPress={() => setLanguage('english')}
          >
            <Text style={styles.langText}>üá¨üáß</Text>
          </TouchableOpacity>
          <TouchableOpacity 
            style={[styles.langButton, language === 'nepali' && styles.activeLang]}
            onPress={() => setLanguage('nepali')}
          >
            <Text style={styles.langText}>üá≥üáµ</Text>
          </TouchableOpacity>
        </View>
      </View>

      {/* Main Content */}
      <ScrollView style={styles.scrollView}>
        {/* Welcome Section */}
        <View style={styles.welcomeCard}>
          <Text style={styles.welcomeText}>
            {language === 'english' ? 'Pepper Bell Disease Guide' : '‡§ñ‡•Å‡§∞‡•ç‡§∏‡§æ‡§®‡•Ä ‡§¨‡•á‡§≤ ‡§∞‡•ã‡§ó ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§ï'}
          </Text>
          <Text style={styles.welcomeSubtext}>
            {language === 'english'
              ? 'Learn how to identify, prevent, and treat common pepper bell diseases.'
              : '‡§ñ‡•Å‡§∞‡•ç‡§∏‡§æ‡§®‡•Ä ‡§¨‡•á‡§≤‡§ï‡§æ ‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§∞‡•ã‡§ó‡§π‡§∞‡•Ç‡§ï‡•ã ‡§≤‡§ï‡•ç‡§∑‡§£, ‡§∞‡•ã‡§ï‡§•‡§æ‡§Æ, ‡§∞ ‡§â‡§™‡§ö‡§æ‡§∞ ‡§¨‡§æ‡§∞‡•á ‡§ú‡§æ‡§®‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç‡•§'}
          </Text>
        </View>

        {/* Healthy Pepper Section */}
        <View style={styles.sectionCard}>
          <TouchableOpacity 
            style={styles.sectionHeader} 
            onPress={() => toggleSection('healthy')}
          >
            <Text style={styles.sectionTitle}>
              {language === 'english' ? 'Healthy Pepper Bell Plants' : '‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§ñ‡•Å‡§∞‡•ç‡§∏‡§æ‡§®‡•Ä ‡§¨‡•á‡§≤‡§ï‡§æ ‡§¨‡§ø‡§∞‡•Å‡§µ‡§æ‡§π‡§∞‡•Ç'}
            </Text>
            <MaterialIcons 
              name={expandedSection === 'healthy' ? 'expand-less' : 'expand-more'} 
              size={24} 
              color="#4CAF50" 
            />
          </TouchableOpacity>
          {expandedSection === 'healthy' && (
            <>
              <ScrollView horizontal showsHorizontalScrollIndicator={false}>
                {healthyImages.map((image, index) => (
                  <Image key={index} source={image} style={styles.cardImage} />
                ))}
              </ScrollView>
              <Text style={styles.sectionDescription}>
                {language === 'english'
                  ? 'Healthy pepper bell plants have vibrant green leaves, strong stems, and no visible signs of disease or pests.'
                  : '‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§ñ‡•Å‡§∞‡•ç‡§∏‡§æ‡§®‡•Ä ‡§¨‡•á‡§≤‡§ï‡§æ ‡§¨‡§ø‡§∞‡•Å‡§µ‡§æ‡§π‡§∞‡•Ç‡§Æ‡§æ ‡§§‡•á‡§ú‡§∏‡•ç‡§µ‡•Ä ‡§π‡§∞‡§ø‡§Ø‡•ã ‡§™‡§æ‡§§‡§π‡§∞‡•Ç, ‡§¨‡§≤‡§ø‡§Ø‡•ã ‡§°‡§æ‡§Å‡§†, ‡§∞ ‡§ï‡•Å‡§®‡•à ‡§∞‡•ã‡§ó ‡§µ‡§æ ‡§ï‡•Ä‡§∞‡§æ‡§π‡§∞‡•Ç‡§ï‡•ã ‡§≤‡§ï‡•ç‡§∑‡§£ ‡§¶‡•á‡§ñ‡§ø‡§¶‡•à‡§®‡•§'}
              </Text>
            </>
          )}
        </View>

        {/* Bacterial Spot Section */}
        <View style={styles.sectionCard}>
          <TouchableOpacity 
            style={styles.sectionHeader} 
            onPress={() => toggleSection('bacterialSpot')}
          >
            <Text style={styles.sectionTitle}>
              {language === 'english' ? 'Bacterial Spot Disease' : '‡§ú‡•Ä‡§µ‡§æ‡§£‡•Å ‡§¶‡§æ‡§ó ‡§∞‡•ã‡§ó'}
            </Text>
            <MaterialIcons 
              name={expandedSection === 'bacterialSpot' ? 'expand-less' : 'expand-more'} 
              size={24} 
              color="#D32F2F" 
            />
          </TouchableOpacity>
          {expandedSection === 'bacterialSpot' && (
            <>
              <ScrollView horizontal showsHorizontalScrollIndicator={false}>
                {bacterialSpotImages.map((image, index) => (
                  <Image key={index} source={image} style={styles.cardImage} />
                ))}
              </ScrollView>
              <Text style={styles.sectionDescription}>
                {language === 'english'
                  ? 'Bacterial spot is caused by the bacterium Xanthomonas campestris. It thrives in warm, humid conditions and spreads through infected seeds, water, and plant debris.'
                  : '‡§ú‡•Ä‡§µ‡§æ‡§£‡•Å ‡§¶‡§æ‡§ó ‡§∞‡•ã‡§ó Xanthomonas campestris ‡§®‡§æ‡§Æ‡§ï ‡§ú‡•Ä‡§µ‡§æ‡§£‡•Å‡§≤‡•á ‡§ó‡§∞‡•ç‡§¶‡§æ ‡§π‡•Å‡§®‡•ç‡§õ‡•§ ‡§Ø‡•ã ‡§®‡•ç‡§Ø‡§æ‡§®‡•ã, ‡§Ü‡§∞‡•ç‡§¶‡•ç‡§∞ ‡§Ö‡§µ‡§∏‡•ç‡§•‡§æ‡§Æ‡§æ ‡§¨‡§¢‡•ç‡§õ ‡§∞ ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§¨‡•Ä‡§â, ‡§™‡§æ‡§®‡•Ä, ‡§∞ ‡§¨‡•ã‡§ü‡§¨‡§æ‡§ü ‡§´‡•à‡§≤‡§ø‡§®‡•ç‡§õ‡•§'}
              </Text>
              <View style={styles.detailsContainer}>
                <Text style={styles.detailTitle}>
                  {language === 'english' ? 'Symptoms:' : '‡§≤‡§ï‡•ç‡§∑‡§£‡§π‡§∞‡•Ç:'}
                </Text>
                <Text style={styles.detailText}>
                  {language === 'english'
                    ? '‚Ä¢ Small, water-soaked spots on leaves\n‚Ä¢ Spots turn brown and crack over time\n‚Ä¢ Yellow halos around spots\n‚Ä¢ Infected fruits with raised, scabby lesions'
                    : '‚Ä¢ ‡§™‡§æ‡§§‡§Æ‡§æ ‡§∏‡§æ‡§®‡§æ, ‡§™‡§æ‡§®‡•Ä‡§≤‡•á ‡§≠‡§ø‡§ú‡•á‡§ï‡•ã ‡§¶‡§æ‡§ó‡§π‡§∞‡•Ç\n‚Ä¢ ‡§¶‡§æ‡§ó‡§π‡§∞‡•Ç ‡§ñ‡•à‡§∞‡•ã ‡§∞ ‡§´‡•Å‡§ü‡•ç‡§õ‡§®‡•ç\n‚Ä¢ ‡§¶‡§æ‡§ó‡§π‡§∞‡•Ç‡§ï‡•ã ‡§µ‡§∞‡§ø‡§™‡§∞‡§ø ‡§™‡§π‡•á‡§Ç‡§≤‡•ã ‡§ò‡•á‡§∞‡§æ\n‚Ä¢ ‡§´‡§≤‡§Æ‡§æ ‡§â‡§†‡•á‡§ï‡•ã, ‡§ñ‡§∞‡§æ‡§®‡•Ä ‡§ú‡§∏‡•ç‡§§‡•ã ‡§ò‡§æ‡§â‡§π‡§∞‡•Ç'}
                </Text>
              </View>
              <View style={styles.detailsContainer}>
                <Text style={styles.detailTitle}>
                  {language === 'english' ? 'Prevention & Treatment:' : '‡§∞‡•ã‡§ï‡§•‡§æ‡§Æ ‡§∞ ‡§â‡§™‡§ö‡§æ‡§∞:'}
                </Text>
                <Text style={styles.detailText}>
                  {language === 'english'
                    ? '‚Ä¢ Use disease-free seeds\n‚Ä¢ Avoid overhead irrigation\n‚Ä¢ Apply copper-based bactericides\n‚Ä¢ Remove and destroy infected plants'
                    : '‚Ä¢ ‡§∞‡•ã‡§ó‡§Æ‡•Å‡§ï‡•ç‡§§ ‡§¨‡•Ä‡§â ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§ó‡§∞‡•ç‡§®‡•á\n‚Ä¢ ‡§Æ‡§æ‡§•‡§ø‡§¨‡§æ‡§ü ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à ‡§®‡§ó‡§∞‡•ç‡§®‡•á\n‚Ä¢ ‡§§‡§æ‡§Æ‡§æ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ú‡•Ä‡§µ‡§æ‡§£‡•Å‡§®‡§æ‡§∂‡§ï ‡§õ‡§∞‡•ç‡§®‡•á\n‚Ä¢ ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§¨‡•ã‡§ü‡§π‡§∞‡•Ç ‡§π‡§ü‡§æ‡§è‡§∞ ‡§®‡§∑‡•ç‡§ü ‡§ó‡§∞‡•ç‡§®‡•á'}
                </Text>
              </View>
            </>
          )}
        </View>
      </ScrollView>

      {/* Floating Action Buttons */}
      <View style={styles.fabContainer}>
        <TouchableOpacity 
          style={[styles.fab, styles.fabExpert]}
          onPress={() => router.push('/FarmerTab/FeatureNull')}
        >
          <MaterialIcons name="chat" size={24} color="white" />
        </TouchableOpacity>
        <TouchableOpacity 
          style={[styles.fab, styles.fabScan]}
          onPress={() => router.push('/FarmerTab/PepperScreen')}
        >
          <MaterialIcons name="camera-alt" size={24} color="white" />
        </TouchableOpacity>
      </View>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  mainContainer: {
    flex: 1,
    backgroundColor: '#F5F3EE',
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingHorizontal: 20,
    paddingVertical: 15,
    backgroundColor: '#4CAF50',
  },
  backButton: {
    padding: 10,
  },
  languageToggle: {
    flexDirection: 'row',
    gap: 10,
  },
  langButton: {
    padding: 8,
    borderRadius: 20,
  },
  activeLang: {
    backgroundColor: 'rgba(255, 255, 255, 0.2)',
  },
  langText: {
    fontSize: 20,
  },
  scrollView: {
    flex: 1,
  },
  welcomeCard: {
    backgroundColor: '#4CAF50',
    padding: 20,
    margin: 15,
    borderRadius: 15,
    elevation: 3,
  },
  welcomeText: {
    color: 'white',
    fontSize: 24,
    fontWeight: 'bold',
  },
  welcomeSubtext: {
    color: 'rgba(255, 255, 255, 0.9)',
    fontSize: 16,
    marginTop: 5,
  },
  sectionCard: {
    backgroundColor: 'white',
    margin: 15,
    borderRadius: 15,
    elevation: 3,
  },
  sectionHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 15,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#2E7D32',
  },
  cardImage: {
    width: width * 0.6,
    height: 150,
    borderRadius: 10,
    margin: 10,
  },
  sectionDescription: {
    color: '#666',
    paddingHorizontal: 15,
    paddingBottom: 15,
    lineHeight: 22,
  },
  detailsContainer: {
    backgroundColor: '#F1F8E9',
    padding: 15,
    margin: 15,
    borderRadius: 10,
  },
  detailTitle: {
    fontWeight: 'bold',
    color: '#2E7D32',
    marginBottom: 5,
  },
  detailText: {
    color: '#666',
    lineHeight: 22,
  },
  fabContainer: {
    position: 'absolute',
    right: 20,
    bottom: 20,
    flexDirection: 'column',
    gap: 15,
  },
  fab: {
    width: 60,
    height: 60,
    borderRadius: 30,
    justifyContent: 'center',
    alignItems: 'center',
    elevation: 5,
  },
  fabScan: {
    backgroundColor: '#4CAF50',
  },
  fabExpert: {
    backgroundColor: '#FFA000',
  },
});

export default PepperBell;